{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/fabricio/Escritorio/app/src/components/Login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Media from 'react-media';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 13\n        }\n      }, __jsx(Media, {\n        queries: {\n          small: \"(max-width: 599px)\",\n          medium: \"(min-width: 600px) and (max-width: 1199px)\",\n          large: \"(min-width: 1200px)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 17\n        }\n      }, function (matches) {\n        return __jsx(Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }\n        }, matches.small && __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 47\n          }\n        }, \"I am small!\"), matches.medium && __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 48\n          }\n        }, \"I am medium!\"), matches.large && __jsx(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 47\n          }\n        }, \"I am large!\"));\n      }));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/fabricio/Escritorio/app/src/components/Login.js"],"names":["Media","small","medium","large","matches","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;;;;;;;;;;;;;;;6BAGa;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,OAAO,EAAE;AACZC,UAAAA,KAAK,EAAE,oBADK;AAEZC,UAAAA,MAAM,EAAE,4CAFI;AAGZC,UAAAA,KAAK,EAAE;AAHK,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK,UAAAC,OAAO;AAAA,eACJ,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,OAAO,CAACH,KAAR,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADtB,EAEKG,OAAO,CAACF,MAAR,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFvB,EAGKE,OAAO,CAACD,KAAR,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHtB,CADI;AAAA,OALZ,CADJ,CADJ;AAiBH;;;;EAnBwBE,KAAK,CAACC,S","sourcesContent":["import Media from 'react-media';\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <div>\n                <Media queries={{\n                    small: \"(max-width: 599px)\",\n                    medium: \"(min-width: 600px) and (max-width: 1199px)\",\n                    large: \"(min-width: 1200px)\"\n                }}>\n                    {matches => (\n                        <Fragment>\n                            {matches.small && <p>I am small!</p>}\n                            {matches.medium && <p>I am medium!</p>}\n                            {matches.large && <p>I am large!</p>}\n                        </Fragment>\n                    )}\n                </Media>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}